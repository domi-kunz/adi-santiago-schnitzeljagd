{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StartPage","_ref","onContinue","React","createElement","className","onClick","App","_tasks$month","showStartPage","setShowStartPage","useState","localStorage","getItem","month","setMonth","savedMonth","parseInt","taskIndex","setTaskIndex","savedTaskIndex","userAnswer","setUserAnswer","showHint","setShowHint","isCorrect","setIsCorrect","completedTasks","setCompletedTasks","saved","JSON","parse","rulesAccepted","setRulesAccepted","attemptsLeft","setAttemptsLeft","feedbackClass","setFeedbackClass","tasks","title","question","answer","hint","location","useEffect","setItem","stringify","calculateProgress","totalTasks","length","completedCount","filter","task","startsWith","concat","Math","round","areAllTasksCompletedForMonth","monthIndex","every","_","taskIdx","isTaskCompleted","includes","currentTask","style","fontSize","color","width","textAlign","marginTop","fontWeight","type","value","onChange","e","target","placeholder","checkAnswer","isAnswerCorrect","toLowerCase","trim","prevAttempts","setTimeout","newCompletedTasks","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAGA,MAAMA,EAAYC,IAAoB,IAAnBC,WAAEA,GAAYD,EAC/B,OACEE,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SAAG,gTAKHD,IAAAC,cAAA,SAAG,obAOHD,IAAAC,cAAA,SAAG,kHAGHD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,qIACJD,IAAAC,cAAA,UAAI,6JACJD,IAAAC,cAAA,UAAI,uIAEND,IAAAC,cAAA,SAAG,mLAIHD,IAAAC,cAAA,SAAG,yBAAsBD,IAAAC,cAAA,WAAM,cAC/BD,IAAAC,cAAA,UAAQC,UAAU,kBAAkBC,QAASJ,GAAY,YAsUhDK,MAjUHA,KAAM,IAAAC,EAChB,MAAOC,EAAeC,GAAoBC,mBAAS,KACxBC,aAAaC,QAAQ,sBAIzCC,EAAOC,GAAYJ,mBAAS,KACjC,MAAMK,EAAaJ,aAAaC,QAAQ,gBACxC,OAAOG,EAAaC,SAASD,EAAY,IAAM,KAG1CE,EAAWC,GAAgBR,mBAAS,KACzC,MAAMS,EAAiBR,aAAaC,QAAQ,oBAC5C,OAAOO,EAAiBH,SAASG,EAAgB,IAAM,KAGlDC,EAAYC,GAAiBX,mBAAS,KACtCY,EAAUC,GAAeb,oBAAS,IAClCc,EAAWC,GAAgBf,oBAAS,IACpCgB,EAAgBC,GAAqBjB,mBAAS,KACnD,MAAMkB,EAAQjB,aAAaC,QAAQ,kBACnC,OAAOgB,EAAQC,KAAKC,MAAMF,GAAS,MAE9BG,EAAeC,GAAoBtB,oBAAS,IAC5CuB,EAAcC,GAAmBxB,mBAAS,IAC1CyB,EAAeC,GAAoB1B,mBAAS,IAI7C2B,EAAQ,CACZ,CACE,CACEC,MAAO,0BACPC,SAAU,6GACVC,OAAQ,OACRC,KAAM,uCACNC,SAAU,yCAEZ,CACEJ,MAAO,qBACPC,SAAU,8DACVC,OAAQ,IACRC,KAAM,yGACNC,SAAU,uBAGd,CACE,CACEJ,MAAO,4BACPC,SAAU,kKACVC,OAAQ,IACRC,KAAM,iHACNC,SAAU,6BAEZ,CACEJ,MAAO,wBACPC,SAAU,qDACVC,OAAQ,MACRC,KAAM,+CACNC,SAAU,sBAEZ,CACEJ,MAAO,sBACPC,SAAU,+CACVC,OAAQ,KACRC,KAAM,yDACNC,SAAU,cAEZ,CACEJ,MAAO,2BACPC,SAAU,gEACVC,OAAQ,KACRC,KAAM,sGACNC,SAAU,8BAKhBC,oBAAU,KACRhC,aAAaiC,QAAQ,iBAAkBf,KAAKgB,UAAUnB,IACtDf,aAAaiC,QAAQ,eAAgB/B,GACrCF,aAAaiC,QAAQ,mBAAoB3B,GAEpCT,GACHG,aAAaiC,QAAQ,mBAAoB,SAE1C,CAAClB,EAAgBlB,EAAeK,EAAOI,IAE1C,MAuCM6B,EAAoBA,KACxB,MAAMC,EAAaV,EAAMxB,GAAOmC,OAC1BC,EAAiBvB,EAAewB,OAAOC,GAAQA,EAAKC,WAAU,GAAAC,OAAIxC,EAAK,OAAMmC,OACnF,OAAOM,KAAKC,MAAON,EAAiBF,EAAc,MAG9CS,EAAgCC,GAC7BpB,EAAMoB,GAAYC,MAAM,CAACC,EAAGC,IAXbC,EAACJ,EAAYG,IAC5BlC,EAAeoC,SAAQ,GAAAT,OAAII,EAAU,KAAAJ,OAAIO,IAW9CC,CAAgBJ,EAAYG,IAI1BG,EAA0B,QAAfxD,EAAG8B,EAAMxB,UAAM,IAAAN,OAAA,EAAZA,EAAeU,GAEnC,OAAIT,EACKN,IAAAC,cAACJ,EAAS,CAACE,WAAYA,IAAMQ,GAAiB,KAGzC,IAAVI,GAAe2C,EAA6B,GAE5CtD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,QAAM6D,MAAO,CAAEC,SAAU,OAAQC,MAAO,YAAa,gBACrDhE,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAAA,SAAG,kEACHD,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,UAAI,gDACJD,IAAAC,cAAA,SAAG,8VAMDD,IAAAC,cAAA,SAAG,yfAOHD,IAAAC,cAAA,SAAG,uNAKLD,IAAAC,cAAA,SAAG,iCAELD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,SAAG,yDACwCD,IAAAC,cAAA,cAAQ,eAAoB,qBAGzED,IAAAC,cAAA,UACEE,QAASA,KACLS,EAAS,GACRI,EAAa,IAElBd,UAAU,gBACX,gBAKHF,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,OAAKC,UAAU,eAAe4D,MAAO,CAAEG,MAAK,WAE9CjE,IAAAC,cAAA,KAAG6D,MAAO,CAAEI,UAAW,SAAUC,UAAW,OAAQC,WAAY,SAAU,sBASlE,IAAVzD,GAAe2C,EAA6B,GAE5CtD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,QAAM6D,MAAO,CAAEC,SAAU,OAAQC,MAAO,YAAa,gBACrDhE,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,SAAG,2DACHD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,oCACJD,IAAAC,cAAA,SAAG,6CACyCD,IAAAC,cAAA,WAAM,8DACQD,IAAAC,cAAA,WAAM,+DACZD,IAAAC,cAAA,cAKxDD,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,OAAKC,UAAU,eAAe4D,MAAO,CAAEG,MAAK,WAE9CjE,IAAAC,cAAA,KAAG6D,MAAO,CAAEI,UAAW,SAAUC,UAAW,OAAQC,WAAY,SAAU,sBAO3EP,EAKH7D,IAAAC,cAAA,OAAKC,UAAS,iBAAAiD,OAAmBlB,IAC/BjC,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SAAG,wCAGLD,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,UACEE,QAASA,IAAM2B,GAAiB,GAChC5B,UAAU,gBACX,wBAKF2B,GACC7B,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAG,qEACiED,IAAAC,cAAA,WAAM,kDACzBD,IAAAC,cAAA,WAAM,6DACKD,IAAAC,cAAA,YAE5DD,IAAAC,cAAA,UACEE,QAASA,IAAM2B,GAAiB,GAChC5B,UAAU,sBACX,iBAMLF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAhPS,CAAC,SAAU,WAgPRU,KAGdX,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAK4D,EAAYzB,OACjBpC,IAAAC,cAAA,SAAI4D,EAAYxB,UAEfjB,GACCpB,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,YAAM,gBACND,IAAAC,cAAA,SAAI4D,EAAYtB,OAIpBvC,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,SACEoE,KAAK,OACLC,MAAOpD,EACPqD,SAAWC,GAAMrD,EAAcqD,EAAEC,OAAOH,OACxCI,YAAY,mBACZxE,UAAU,iBAEZF,IAAAC,cAAA,UAAQE,QAzMIwE,KAClB,MAAMd,EAAc1B,EAAMxB,GAAOI,GACjC,IAAK8C,EAAa,OAElB,MAAMe,EAAkB1D,EAAW2D,cAAcC,SAAWjB,EAAYvB,OAaxE,GAZAf,EAAaqD,GACb1C,EAAiB0C,EAAkB,iBAAmB,iBAGjDA,GAAmB7C,EAAe,GACrCC,EAAgB+C,GAAgBA,EAAe,GAGjDC,WAAW,KACT9C,EAAiB,KAChB,KAEC0C,EAAiB,CACnB,MAAMK,EAAoB,IAAIzD,EAAc,GAAA2B,OAAKxC,EAAK,KAAAwC,OAAIpC,IAC1DU,EAAkBwD,GAElBD,WAAW,KACLjE,EAAYoB,EAAMxB,GAAOmC,OAAS,EACpC9B,EAAaD,EAAY,GAEzBC,EAAa,GAEfG,EAAc,IACdI,GAAa,GACbF,GAAY,IACX,QA2K+BnB,UAAU,uBAAsB,cAKhEF,IAAAC,cAAA,UACEE,QAASA,IAAMkB,GAAaD,GAC5BlB,UAAU,sBAETkB,EAAW,oBAAsB,oBAGnCW,EAAe,GACd/B,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,SAAG,0BAAwB8B,IAI/B/B,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,OACEC,UAAU,eACV4D,MAAO,CAAEG,MAAK,GAAAd,OAAKP,IAAmB,SAG1C5C,IAAAC,cAAA,KAAG6D,MAAO,CAAEI,UAAW,SAAUC,UAAW,OAAQC,WAAY,SAAU,gBAC1DxB,IAAoB,OApFjC5C,IAAAC,cAAA,WAAK,eC/PDiF,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAb,EAAA,GAAAc,KAAAD,EAAAE,KAAA,UAAqBD,KAAKxF,IAAiD,IAAhD0F,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS9F,EACpE0F,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjG,IAAAC,cAACD,IAAMkG,WAAU,KACflG,IAAAC,cAACG,EAAG,QAOR8E","file":"static/js/main.4ff6d3ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst StartPage = ({ onContinue }) => {\r\n  return (\r\n    <div className=\"start-page-container\">\r\n      <h1>Willkommen, Sherlock!</h1>\r\n      <p>\r\n        Ah, wie wundervoll, dass Sie sich heute hier eingefunden haben. Es scheint, als hätten Sie ein Faible\r\n        für knifflige Rätsel und aufregende Herausforderungen – ganz wie ich es vermutet habe! Aber Vorsicht,\r\n        meine liebe Spürnase, dies ist kein gewöhnlicher Spaziergang durch den Park.\r\n      </p>\r\n      <p>\r\n        Ich, Watson, habe eine Reihe spannender Quests für Sie vorbereitet. Jede einzelne fordert Ihren\r\n        Verstand, Ihre Kreativität und Ihren Scharfsinn heraus. Schließen Sie die Quests innerhalb eines\r\n        Monats ab, und Sie dürfen sich auf eine wohlverdiente Belohnung freuen. Doch seien Sie gewarnt,\r\n        sollten Sie scheitern, erwartet Sie eine gerechte Strafe – ein wahrhaft bittersüßer Moment für uns\r\n        beide, nicht wahr?\r\n      </p>\r\n      <p>\r\n        Nun denn, hier die Regeln, die Sie unter keinen Umständen brechen dürfen – ich beobachte Sie genau:\r\n      </p>\r\n      <ul>\r\n        <li>Beweisfoto! Senden Sie Domi nach Abschluss einer Quest ein Selfie als Beweis via WhatsApp. Ohne Beweis kein Triumph, mein Freund!</li>\r\n        <li>Internet? Nein, danke! Jede Form von Recherche im weltweiten Netz ist strengstens untersagt. Ihr brillanter Verstand reicht aus – vertrauen Sie mir!</li>\r\n        <li>Keine Schummeleien! Hilfsmittel oder Hilfe von Dritten sind unter keinen Umständen gestattet. Nur Sie und Ihr Gehirn, Sherlock.</li>\r\n      </ul>\r\n      <p>\r\n        Nun liegt es an Ihnen, Sherlock. Mögen Sie uns alle mit Ihrer Genialität beeindrucken. Aber vergessen\r\n        Sie nicht: Der Countdown läuft, und das Spiel ist erbarmungslos.\r\n      </p>\r\n      <p>Viel Erfolg, Sherlock!<br />Ihr Watson</p>\r\n      <button className=\"continue-button\" onClick={onContinue}>Weiter</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [showStartPage, setShowStartPage] = useState(() => {\r\n    const hasSeenStartPage = localStorage.getItem('hasSeenStartPage');\r\n    return !hasSeenStartPage;\r\n  });\r\n\r\n  const [month, setMonth] = useState(() => {\r\n    const savedMonth = localStorage.getItem('currentMonth');\r\n    return savedMonth ? parseInt(savedMonth, 10) : 0;\r\n  });\r\n\r\n  const [taskIndex, setTaskIndex] = useState(() => {\r\n    const savedTaskIndex = localStorage.getItem('currentTaskIndex');\r\n    return savedTaskIndex ? parseInt(savedTaskIndex, 10) : 0;\r\n  });\r\n\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [completedTasks, setCompletedTasks] = useState(() => {\r\n    const saved = localStorage.getItem('completedTasks');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [rulesAccepted, setRulesAccepted] = useState(false);\r\n  const [attemptsLeft, setAttemptsLeft] = useState(4);\r\n  const [feedbackClass, setFeedbackClass] = useState('');\r\n\r\n  const months = [\"Januar\", \"Februar\"];\r\n\r\n  const tasks = [\r\n    [\r\n      {\r\n        title: \"Die Kathedrale erkunden\",\r\n        question: \"Finde die Statue des heiligen Jakobus in der Kathedrale. Welches Symbol hält er in seiner rechten Hand?\",\r\n        answer: \"stab\",\r\n        hint: \"Schau dir den Hauptaltar genau an...\",\r\n        location: \"Kathedrale von Santiago de Compostela\"\r\n      },\r\n      {\r\n        title: \"Praza do Obradoiro\",\r\n        question: \"Wie viele Säulen hat der Haupteingang des Pazo de Raxoi?\",\r\n        answer: \"8\",\r\n        hint: \"Stell dich vor den Palast und zähle die Säulen am Eingang...Säulen sind nicht gleich Pfeiler!\",\r\n        location: \"Praza do Obradoiro\"\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        title: \"Museo de Historia Natural\",\r\n        question: \"In der Ausstellung findest du eine auffällige Spalte, die mich an Gisel erinnert. Lautlose Jäger blicken dort heraus. Wie viele Augen kannst du erkennen?\",\r\n        answer: \"4\",\r\n        hint: \"Franky könnte man auch als Baumstamm bezeichnen, zumindest immer wenn er dich sieht😏👅\",\r\n        location: \"Museo de Historia Natural\"\r\n      },\r\n      {\r\n        title: \"Der Botanische Garten\",\r\n        question: \"Welche Farbe hat die größte Blume im Garten?\",\r\n        answer: \"rot\",\r\n        hint: \"Suche die auffälligste Blume im Garten...\",\r\n        location: \"Botanischer Garten\"\r\n      },\r\n      {\r\n        title: \"Marktplatz erkunden\",\r\n        question: \"Wie viele Stände verkaufen frisches Obst?\",\r\n        answer: \"12\",\r\n        hint: \"Gehe durch den Markt und zähle die Obststände...\",\r\n        location: \"Marktplatz\"\r\n      },\r\n      {\r\n        title: \"Museo del Pueblo Gallego\",\r\n        question: \"Wie viele Stufen hat die größte der drei Wendeltreppen?\",\r\n        answer: \"82\",\r\n        hint: \"Gehe die Treppe hinauf und zähle die Stufen...falls das nicht möglich ist, Frage einen Guide.\",\r\n        location: \"Museo del Pueblo Gallego\"\r\n      }\r\n    ]\r\n  ];\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('completedTasks', JSON.stringify(completedTasks));\r\n    localStorage.setItem('currentMonth', month);\r\n    localStorage.setItem('currentTaskIndex', taskIndex);\r\n\r\n    if (!showStartPage) {\r\n      localStorage.setItem('hasSeenStartPage', 'true');\r\n    }\r\n  }, [completedTasks, showStartPage, month, taskIndex]);\r\n\r\n  const checkAnswer = () => {\r\n    const currentTask = tasks[month][taskIndex];\r\n    if (!currentTask) return; // Keine Antwort prüfen, wenn keine Aufgabe vorhanden ist\r\n  \r\n    const isAnswerCorrect = userAnswer.toLowerCase().trim() === currentTask.answer;\r\n    setIsCorrect(isAnswerCorrect);\r\n    setFeedbackClass(isAnswerCorrect ? 'answer-correct' : 'answer-wrong');\r\n  \r\n    // Versuche verringern, auch wenn bereits 0 Versuche übrig sind\r\n    if (!isAnswerCorrect && attemptsLeft > 0) {\r\n      setAttemptsLeft(prevAttempts => prevAttempts - 1);\r\n    }\r\n  \r\n    setTimeout(() => {\r\n      setFeedbackClass(''); // Feedback zurücksetzen\r\n    }, 1000);\r\n  \r\n    if (isAnswerCorrect) {\r\n      const newCompletedTasks = [...completedTasks, `${month}-${taskIndex}`];\r\n      setCompletedTasks(newCompletedTasks);\r\n  \r\n      setTimeout(() => {\r\n        if (taskIndex < tasks[month].length - 1) {\r\n          setTaskIndex(taskIndex + 1);\r\n        } else {\r\n          setTaskIndex(0); // Zurück zum ersten Task\r\n        }\r\n        setUserAnswer(''); // Antwort zurücksetzen\r\n        setIsCorrect(false); // Erfolg zurücksetzen\r\n        setShowHint(false); // Hinweis zurücksetzen\r\n      }, 1500);\r\n    }\r\n  };\r\n  \r\n\r\n  const isTaskCompleted = (monthIndex, taskIdx) => {\r\n    return completedTasks.includes(`${monthIndex}-${taskIdx}`);\r\n  };\r\n\r\n  const calculateProgress = () => {\r\n    const totalTasks = tasks[month].length;\r\n    const completedCount = completedTasks.filter(task => task.startsWith(`${month}-`)).length;\r\n    return Math.round((completedCount / totalTasks) * 100);\r\n  };\r\n\r\n  const areAllTasksCompletedForMonth = (monthIndex) => {\r\n    return tasks[monthIndex].every((_, taskIdx) =>\r\n      isTaskCompleted(monthIndex, taskIdx)\r\n    );\r\n  };\r\n\r\n  const currentTask = tasks[month]?.[taskIndex];\r\n\r\n  if (showStartPage) {\r\n    return <StartPage onContinue={() => setShowStartPage(false)} />;\r\n  }\r\n\r\n  if (month === 0 && areAllTasksCompletedForMonth(0)) {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <div className=\"header\">\r\n          <span style={{ fontSize: '48px', color: '#1565C0' }}>🎉</span>\r\n          <h1>Herzlichen Glückwunsch!</h1>\r\n          <p>Du hast alle Aufgaben für Januar erfolgreich abgeschlossen!</p>\r\n          <div className=\"love-letter-container\">\r\n            <h2>💌 Liebesbrief an Adi 💌</h2>\r\n            <p>\r\n              Du hast nicht nur alle Aufgaben mit Bravour gemeistert,\r\n              sondern auch bewiesen, dass du mein liebster Abenteurer bist!\r\n              Auch wenn uns gerade tausende Kilometer trennen, fühle ich deine Nähe in jedem Gedanken an dich. \r\n              Du bist in meinem Herzen so lebendig und präsent, dass ich manchmal das Gefühl habe, \r\n              du wärst direkt hier neben mir.</p>\r\n              <p>\r\n              Ich stelle mir vor, wie du all diese neuen Orte erkundest, neue Menschen triffst und dabei die Welt mit deiner Lebensfreude bereicherst. \r\n              Ich weiß, dass du dort Spuren hinterlässt – genauso wie du sie bei mir hinterlassen hast.\r\n              Aber ich kann es kaum erwarten, bis wir uns wiedersehen. Ich stelle mir den Moment vor, \r\n              wenn ich dich endlich wieder in die Arme schließen kann, \r\n              und es fühlt sich jetzt schon wie ein kleiner Sieg gegen all die Zeit und Entfernung an, \r\n              die zwischen uns liegt.</p>\r\n              <p>\r\n              Bis dahin bleibe ich hier und zähle die Tage, während ich jede Nachricht, \r\n              jedes Foto und jeden Gedanken von dir wie einen kleinen Schatz bewahre. \r\n              Du bist mein Zuhause, egal wo wir auf der Welt gerade sind.</p>\r\n\r\n            <p>Ich liebe dich! ❤️</p>\r\n          </div>\r\n          <div className=\"info-container\">\r\n            <p>\r\n              ⚠️ Die Quests für Februar werden erst am <strong>01. Februar</strong> freigeschaltet!\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n                setMonth(1); // Übergang zum Februar nur auf Knopfdruck\r\n                 setTaskIndex(0);\r\n             }}\r\n            className=\"month-button\"\r\n          >\r\n            Zum Februar\r\n          </button>\r\n        </div>\r\n  \r\n        <div className=\"progress-bar-container\">\r\n          <div className=\"progress-bar\" style={{ width: `100%` }}></div>\r\n        </div>\r\n        <p style={{ textAlign: 'center', marginTop: '10px', fontWeight: 'bold' }}>\r\n          Fortschritt: 100%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n\r\n  if (month === 1 && areAllTasksCompletedForMonth(1)) {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <div className=\"header\">\r\n          <span style={{ fontSize: '48px', color: '#1565C0' }}>🎉</span>\r\n          <h1>Februar abgeschlossen!</h1>\r\n          <p>Du hast auch die Aufgaben für Februar abgeschlossen!</p>\r\n          <div className=\"poem-container\">\r\n            <h2>Ein Essensgutschein deiner Wahl!</h2>\r\n            <p>\r\n              Du liebst das Essen gehen genauso wie ich,<br />\r\n              deshalb erhältst du hiermit einen Gutschein deiner Wahl.<br />\r\n              Teile mir mit wo und wann und es geht auf mich. ❤️<br />\r\n              </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"progress-bar-container\">\r\n          <div className=\"progress-bar\" style={{ width: `100%` }}></div>\r\n        </div>\r\n        <p style={{ textAlign: 'center', marginTop: '10px', fontWeight: 'bold' }}>\r\n          Fortschritt: 100%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentTask) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={`app-container ${feedbackClass}`}>\r\n      <div className=\"header\">\r\n        <h1>Questiago💙</h1>\r\n        <p>Watson is watching you!👀</p>\r\n      </div>\r\n\r\n      <div className=\"rules-button-container\">\r\n        <button\r\n          onClick={() => setRulesAccepted(true)}\r\n          className=\"rules-button\"\r\n        >\r\n          📖 Regeln\r\n        </button>\r\n      </div>\r\n\r\n      {rulesAccepted && (\r\n        <div className=\"rules-modal\">\r\n          <h3>Regeln:</h3>\r\n          <p>\r\n            1. Schicke Domi ein Beweisfoto in Form eines Selfies per WhatsApp!<br />\r\n            2. Internetrecherche ist strengstens untersagt!<br />\r\n            3. Hilfsmittel oder Hilfe von Dritten ist nicht gestattet!<br />\r\n          </p>\r\n          <button\r\n            onClick={() => setRulesAccepted(false)}\r\n            className=\"close-rules-button\"\r\n          >\r\n            Schließen\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"month-display\">\r\n        <h2>{months[month]}</h2>\r\n      </div>\r\n\r\n      <div className=\"task-container\">\r\n        <h3>{currentTask.title}</h3>\r\n        <p>{currentTask.question}</p>\r\n\r\n        {showHint && (\r\n          <div className=\"hint-container\">\r\n            <span>💡</span>\r\n            <p>{currentTask.hint}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={userAnswer}\r\n            onChange={(e) => setUserAnswer(e.target.value)}\r\n            placeholder=\"Deine Antwort...\"\r\n            className=\"answer-input\"\r\n          />\r\n          <button onClick={checkAnswer} className=\"check-answer-button\">\r\n            Prüfen\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => setShowHint(!showHint)}\r\n          className=\"toggle-hint-button\"\r\n        >\r\n          {showHint ? 'Hinweis verbergen' : 'Hinweis anzeigen'}\r\n        </button>\r\n\r\n        {attemptsLeft > 0 && (\r\n          <div className=\"attempts-left\">\r\n            <p>Verbleibende Versuche: {attemptsLeft}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"progress-bar-container\">\r\n          <div\r\n            className=\"progress-bar\"\r\n            style={{ width: `${calculateProgress()}%` }}\r\n          ></div>\r\n        </div>\r\n        <p style={{ textAlign: 'center', marginTop: '10px', fontWeight: 'bold' }}>\r\n          Fortschritt: {calculateProgress()}%\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}